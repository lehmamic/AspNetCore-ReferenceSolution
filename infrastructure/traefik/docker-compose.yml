version: '3.7'

services:
  traefik:
    image: traefik:v2.1.3
    ports:
      - 80:80
      - 443:443
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
        preferences:
          - spread: node.id
      labels:
        - traefik.enable=true
        - traefik.http.routers.api.rule=Host(`traefik#{if Octopus.Environment.Name != "PROD"}-test#{/if}.#{DOMAIN}`)
        - traefik.http.routers.api.service=api@internal # Let the dashboard access the traefik api
        - traefik.http.routers.api.entrypoints=websecure
        - traefik.http.routers.api.tls=true
        - traefik.http.routers.api.middlewares=traefik-auth
        - traefik.http.middlewares.traefik-auth.basicauth.users=#{TRAEFIK_USER}
        - traefik.http.services.dummy-svc.loadbalancer.server.port=9999 # Dummy service for Swarm port detection. The port can be any valid integer value.
        - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
        - traefik.http.routers.http-catchall.entrypoints=web
        - traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker
        - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
    command:
      - --api=true
      - --api.dashboard=true # see https://docs.traefik.io/v2.0/operations/dashboard/#secure-mode for how to secure the dashboard
      - --api.debug=true # enable additional endpoints for debugging and profiling
      - --log.level=DEBUG # debug while we get it working, for more levels/info see https://docs.traefik.io/observability/logs/
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-public
      - --providers.file.directory=/etc/traefik
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    secrets:
      - traefik_cert
      - traefik_key
    configs:
      - source: traefik_tls_yml
        target: /etc/traefik/tls.yml
        mode: 444
    networks:
      - default
      - traefik-public

secrets:
  traefik_cert:
    external: true
  traefik_key:
    external: true

configs:
  traefik_tls_yml:
    file: ./config/tls.yml

networks:
  traefik-public:
    external: true